{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","onDeleteClick","onToggleClick","map","AddTask","onAddClick","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","fetchTasks","a","fetch","res","json","data","fetchTask","saveTaskClick","method","headers","body","JSON","stringify","deleteTaskClick","filter","toggleReminderClick","taskToToggle","updatedTask","useEffect","tasksFromServer","getTasks","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ea3666b.chunk.js","sourcesContent":["const Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='btn'\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from './Button';\nimport { useLocation } from 'react-router-dom';\n\nconst Header = ({ onAdd, showAdd }) => {\n  const location = useLocation();\n\n  return (\n    <header className='header'>\n      <h1>Task Tracker</h1>\n      {location.pathname === '/' && (\n        <Button\n          color={showAdd ? 'red' : 'green'}\n          text={showAdd ? 'Close' : 'Add'}\n          onClick={onAdd}\n        />\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? 'reminder' : ''}`}\n      onDoubleClick={() => {\n        onToggle(task.id);\n      }}\n    >\n      <h3>\n        {task.text}{' '}\n        <FaTimes\n          style={{ color: 'red', cursor: 'pointer' }}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from './Task';\n\nconst Tasks = ({ tasks, onDeleteClick, onToggleClick }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDeleteClick}\n          onToggle={onToggleClick}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from 'react';\n\nconst AddTask = ({ onAddClick }) => {\n  const [text, setText] = useState('');\n  const [day, setDay] = useState('');\n  const [reminder, setReminder] = useState(false);\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    if (!text) {\n      alert('Please add a task');\n      return;\n    } else if (!day) {\n      alert('Please add day and time');\n      return;\n    }\n\n    onAddClick({ text, day, reminder });\n\n    setText('');\n    setDay('');\n    setReminder(false);\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input\n          type='text'\n          placeholder='Add Task'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input\n          type='text'\n          placeholder='Add Day & Time'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n\n      <div className='form-control form-control-check'>\n        <label>Set Reminder</label>\n        <input\n          type='checkbox'\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input className='btn btn-block' type='submit' value='Save Task' />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n\n  return (\n    <footer>\n      <p>CopyRight &copy; 2021</p>\n      {location.pathname === '/about' ? (\n        <Link to='/'>Go Back</Link>\n      ) : (\n        <Link to='/about'>About</Link>\n      )}\n    </footer>\n  );\n};\n\nexport default Footer;\n","// import { Link } from 'react-router-dom';\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      {/* <Link to='/'>Go Back</Link> */}\n    </div>\n  );\n};\n\nexport default About;\n","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Fetch Tasks\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  function addTaskClick() {\n    setShowAddTask(!showAddTask);\n  }\n\n  async function saveTaskClick(task) {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  }\n\n  async function deleteTaskClick(id) {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  async function toggleReminderClick(id) {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder,\n    };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedTask),\n    });\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header onAdd={addTaskClick} showAdd={showAddTask} />\n        <Route\n          path='/'\n          exact\n          render={() => (\n            <>\n              {showAddTask && <AddTask onAddClick={saveTaskClick} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDeleteClick={deleteTaskClick}\n                  onToggleClick={toggleReminderClick}\n                />\n              ) : (\n                'No Tasks To Show'\n              )}\n            </>\n          )}\n        />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}